// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String
  Product Product[]

  @@map("categories")
}

model Color {
  id   Int    @id @default(autoincrement())
  name String

  ColorProduct ColorProduct[]
  Product      Product[]

  @@map("colors")
}

model Product {
  id             Int    @id @default(autoincrement())
  category_id    Int
  color_id       Int
  name           String
  description    String
  purchase_price Float
  stock          Int

  Category     Category       @relation(fields: [category_id], references: [id])
  Color        Color          @relation(fields: [color_id], references: [id])
  ProductImage ProductImage[]
  ColorProduct ColorProduct[]
  SellingPrice SellingPrice[]
  Transactions Transactions[]

  @@map("products")
}

model SellingPrice {
  id         Int   @id @default(autoincrement())
  product_id Int
  price0     Float
  price1     Float
  price2     Float
  price3     Float
  price4     Float
  price5     Float

  Product Product @relation(fields: [product_id], references: [id])

  @@map("sellingPrice")
}

model ColorProduct {
  color_id   Int
  product_id Int

  Color   Color   @relation(fields: [color_id], references: [id])
  Product Product @relation(fields: [product_id], references: [id])

  @@id([color_id, product_id])
  @@map("colorproduct")
}

model ProductImage {
  id         Int      @id @default(autoincrement())
  product_id Int
  image_url  String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Product Product @relation(fields: [product_id], references: [id])

  @@map("productimages")
}

model Level_Customer {
  id        Int         @id @default(autoincrement())
  level     Int
  Customers Customers[]

  @@map("level_customer")
}

model Customers {
  id       Int    @id @default(autoincrement())
  level_id Int
  name     String
  address  String
  telp     String
  status   String

  Level        Level_Customer @relation(fields: [level_id], references: [id])
  Transactions Transactions[]

  @@map("customers")
}

model Transactions {
  id          Int      @id @default(autoincrement())
  product_id  Int
  customer_id Int
  tanggal     DateTime @default(now())
  total       Float

  Product            Product              @relation(fields: [product_id], references: [id])
  Customer           Customers            @relation(fields: [customer_id], references: [id])
  Detail_Transaction Detail_Transaction[]

  @@map("transactions")
}

model Detail_Transaction {
  transaction_id  Int
  jumlah_beli     Int
  price_per_piece Float
  subtotal        Float

  Transaction Transactions @relation(fields: [transaction_id], references: [id])

  @@id([transaction_id])
  @@map("detail_transaction")
}
